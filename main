import matplotlib
import PyQt5

matplotlib.use('Qt4Agg')
import matplotlib.pyplot as plt

WB_START_STRING = 'WHITE BALANCE ADJUSTMENT STEP LOG'
Set_RgbGainOffset_STRING = 'SET_RgbGainOffset'
ColorTemp_0_STRING = '[ SET_WBA_ColorTemp= 0 ]'
ColorTemp_1_STRING = '[ SET_WBA_ColorTemp= 1 ]'
ColorTemp_2_STRING = '[ SET_WBA_ColorTemp= 2 ]'
Factory_Comp_STRING = 'Factory_Comp'
WBA_RESULT_OK = 'WBA_RESULT= OK'
WBA_RESULT_NOK = 'WBA_RESULT= NOK'


file_path = '/home/murat/Projects/WorkBench/Data_Science/Data_Analytics_White_Blance/DATA/HAT2S_T5B_056T49-D51_23.10.2019.TXT'


# Open file
with open(file_path, 'r') as f:
    listOfLines = f.read().splitlines()



Number_Of_TV = 0
Total_Line_Numbers = len(listOfLines)
Factory_Comp_list = []
Value_list = []
Color_Temp_list = []
u_list = []
v_list = []
Lv_list= []
current_line_str = ''
str_splt = ''
str_sub = ''
index_uv = 0
index_uv_keep = 0
line_index = 0
current_line_index =0


while True:
    index_uv_keep = index_uv # keep index_uv for WB_NOK
    current_line_str = listOfLines[current_line_index]
    if current_line_str == WB_START_STRING:
        while True:
            Number_Of_TV +=1
            current_line_index += 1
            current_line_str = listOfLines[current_line_index]

            if current_line_str == ColorTemp_0_STRING:
                current_line_index += 2
                #GET LINE-->[ CA310_MINOLTA_Measurement:
                current_line_str = listOfLines[current_line_index]
                str_sub = current_line_str.split("	")

                for x in range(3):
                    index_uv +=x
                    u_list.insert(index_uv,str_sub[1][-4:])
                    v_list.insert(index_uv,str_sub[2][-4:])
                    Lv_list.insert(index_uv,str_sub[3][-5:-2])

                    Color_Temp_list.insert(index_uv, '0' )
                    Factory_Comp_list.insert(index_uv, str(x))
                    Value_list.insert(index_uv, '128')

                while current_line_str != ColorTemp_1_STRING:
                    current_line_index += 1
                    current_line_str = listOfLines[current_line_index]
                    str_splt = current_line_str.split(":")

                    if (str_splt[0][2:]) == Set_RgbGainOffset_STRING:
                         #GET LINE-->[ SET_RgbGainOffset:
                          str_sub = current_line_str.split("	")

                          Color_Temp_list.insert(index_uv, str_sub[1][-1:])
                          Factory_Comp_list.insert(index_uv, str_sub[2][-1:])
                          Value_list.insert(index_uv, str_sub[3][7:10])

                          #GET LINE-->[ CA310_MINOLTA_Measurement:
                          current_line_index += 1
                          current_line_str = listOfLines[current_line_index]
                          str_sub = current_line_str.split("	")
                          u_list.insert(index_uv,str_sub[1][-4:])
                          v_list.insert(index_uv,str_sub[2][-4:])
                          Lv_list.insert(index_uv,str_sub[3][-5:-2])
                          index_uv += 1

            if current_line_str == ColorTemp_1_STRING:
                current_line_index += 2
                #GET LINE-->[ CA310_MINOLTA_Measurement:
                current_line_str = listOfLines[current_line_index]
                str_sub = current_line_str.split("	")

                for x in range(3):
                    index_uv +=x
                    u_list.insert(index_uv,str_sub[1][-4:])
                    v_list.insert(index_uv,str_sub[2][-4:])
                    Lv_list.insert(index_uv,str_sub[3][-5:-2])

                    Color_Temp_list.insert(index_uv, '1' )
                    Factory_Comp_list.insert(index_uv, str(x))
                    Value_list.insert(index_uv, '128')

                while current_line_str != ColorTemp_2_STRING:
                    current_line_index += 1
                    current_line_str = listOfLines[current_line_index]
                    str_splt = current_line_str.split(":")

                    if (str_splt[0][2:]) == Set_RgbGainOffset_STRING:
                         #GET LINE-->[ SET_RgbGainOffset:
                          str_sub = current_line_str.split("	")

                          Color_Temp_list.insert(index_uv, str_sub[1][-1:])
                          Factory_Comp_list.insert(index_uv, str_sub[2][-1:])
                          Value_list.insert(index_uv, str_sub[3][7:10])

                          #GET LINE-->[ CA310_MINOLTA_Measurement:
                          current_line_index += 1
                          current_line_str = listOfLines[current_line_index]
                          str_sub = current_line_str.split("	")
                          u_list.insert(index_uv,str_sub[1][-4:])
                          v_list.insert(index_uv,str_sub[2][-4:])
                          Lv_list.insert(index_uv,str_sub[3][-5:-2])
                          index_uv += 1

            if current_line_str == ColorTemp_2_STRING:
                current_line_index += 2
                #GET LINE-->[ CA310_MINOLTA_Measurement:
                current_line_str = listOfLines[current_line_index]
                str_sub = current_line_str.split("	")

                for x in range(3):
                    index_uv +=x
                    u_list.insert(index_uv,str_sub[1][-4:])
                    v_list.insert(index_uv,str_sub[2][-4:])
                    Lv_list.insert(index_uv,str_sub[3][-5:-2])

                    Color_Temp_list.insert(index_uv, '2' )
                    Factory_Comp_list.insert(index_uv, str(x))
                    Value_list.insert(index_uv, '128')

                while current_line_str != WBA_RESULT_OK:
                    current_line_index += 1
                    current_line_str = listOfLines[current_line_index]
                    str_splt = current_line_str.split(":")

                    if (str_splt[0][2:]) == Set_RgbGainOffset_STRING:
                         #GET LINE-->[ SET_RgbGainOffset:
                          str_sub = current_line_str.split("	")

                          Color_Temp_list.insert(index_uv, str_sub[1][-1:])
                          Factory_Comp_list.insert(index_uv, str_sub[2][-1:])
                          Value_list.insert(index_uv, str_sub[3][7:10])

                          #GET LINE-->[ CA310_MINOLTA_Measurement:
                          current_line_index += 1
                          current_line_str = listOfLines[current_line_index]
                          str_sub = current_line_str.split("	")
                          u_list.insert(index_uv,str_sub[1][-4:])
                          v_list.insert(index_uv,str_sub[2][-4:])
                          Lv_list.insert(index_uv,str_sub[3][-5:-2])
                          index_uv += 1





            if current_line_str == WBA_RESULT_OK:
                break

            if current_line_str == WBA_RESULT_NOK:
                index_uv=index_uv_keep
                break




    current_line_index += 1
    if current_line_index == Total_Line_Numbers:
        break





#Adhust Result TEXT FILE
String_To_Write = ' '
Tab_Str=' '
End_Line = '\n'
File_Result = open('/home/murat/Projects/WorkBench/Data_Science/Data_Analytics_White_Blance/DATA_MINED/Data_Mined.txt', 'w')

for i in range(Number_Of_TV):
    String_To_Write =Color_Temp_list[i] + Tab_Str + Factory_Comp_list[i] + Tab_Str + Value_list[i] + Tab_Str + u_list[i] + Tab_Str + v_list[i] + Tab_Str + Lv_list[i] + End_Line
    File_Result.writelines(String_To_Write)




print(current_line_index)

print(Color_Temp_list)
print(Factory_Comp_list)
print (Value_list)
print(u_list)
print(v_list)
print(Lv_list)
